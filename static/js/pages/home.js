/* ===== ADIABATIC HOME PAGE JAVASCRIPT ===== */

document.addEventListener('DOMContentLoaded', function () {
    initVideoRotation();
    console.log('üè† Home page JavaScript loaded');
});

/* ===== VIDEO ROTATION FOR HOME PAGE ===== */
function initVideoRotation() {
    const videoElements = document.querySelectorAll('.hero-video--rotating');

    if (videoElements.length < 2) {
        console.log('üé¨ Video rotation not initialized - need 2 videos');
        return;
    }

    console.log('üé¨ Initializing video rotation with', videoElements.length, 'videos');

    let currentIndex = 0;
    let transitionTimeout = null;

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
    videoElements.forEach((video, index) => {
        if (index === 0) {
            video.classList.remove('hero-video--hidden');
            video.play();
            setupVideoEndTransition(video, index);
        } else {
            video.classList.add('hero-video--hidden');
            video.pause();
        }
    });

    function setupVideoEndTransition(video, videoIndex) {
        // –û—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä
        if (transitionTimeout) {
            clearTimeout(transitionTimeout);
        }

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –≤—ñ–¥–µ–æ
        function checkVideoTime() {
            const currentTime = video.currentTime;
            const duration = video.duration;

            // –Ø–∫—â–æ –¥–æ –∫—ñ–Ω—Ü—è –≤—ñ–¥–µ–æ –∑–∞–ª–∏—à–∏–ª–∞—Å—è 1 —Å–µ–∫—É–Ω–¥–∞
            if (duration && currentTime >= duration - 1) {
                console.log(`üé¨ Video ${videoIndex + 1} ending in 1 second, starting transition...`);
                startTransition(videoIndex);
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 100–º—Å
            if (!video.paused) {
                setTimeout(checkVideoTime, 100);
            }
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É
        checkVideoTime();

        // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
        video.addEventListener('ended', () => {
            console.log(`üé¨ Video ${videoIndex + 1} ended naturally`);
            startTransition(videoIndex);
        });
    }

    function startTransition(fromIndex) {
        const currentVideo = videoElements[fromIndex];
        const nextIndex = (fromIndex + 1) % videoElements.length;
        const nextVideo = videoElements[nextIndex];

        console.log(`üé¨ Starting transition from video ${fromIndex + 1} to video ${nextIndex + 1}`);

        // –ü—ñ–¥–≥–æ—Ç–æ–≤—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–µ –≤—ñ–¥–µ–æ
        nextVideo.currentTime = 0;
        nextVideo.classList.remove('hero-video--hidden');
        nextVideo.play();

        // –ü–æ—á–∏–Ω–∞—î–º–æ –ø–ª–∞–≤–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥ (1 —Å–µ–∫—É–Ω–¥–∞)
        setTimeout(() => {
            currentVideo.classList.add('hero-video--hidden');

            // –ü–∞—É–∑–∏–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –≤—ñ–¥–µ–æ –ø—ñ—Å–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
            setTimeout(() => {
                currentVideo.pause();
                currentVideo.currentTime = 0; // –°–∫–∏–¥–∞—î–º–æ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫
            }, 1000); // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø—ñ—Å–ª—è –ø–æ—á–∞—Ç–∫—É fade-out

            currentIndex = nextIndex;

            // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ñ–¥–µ–æ
            setupVideoEndTransition(nextVideo, nextIndex);

            console.log(`‚úÖ Transitioned to video ${nextIndex + 1}`);
        }, 100);
    }

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –≤—ñ–¥–µ–æ
    videoElements.forEach((video, index) => {
        video.addEventListener('error', function (e) {
            console.error(`‚ùå Video ${index + 1} error:`, e);

            // –ü—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –ø–µ—Ä–µ–∫–ª—é—á–∞—î–º–æ—Å—è –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –≤—ñ–¥–µ–æ
            if (index === currentIndex) {
                setTimeout(() => startTransition(index), 1000);
            }
        });

        video.addEventListener('loadstart', function () {
            console.log(`üìÅ Video ${index + 1} loading started`);
        });

        video.addEventListener('canplay', function () {
            console.log(`‚úÖ Video ${index + 1} ready to play`);
        });

        // –í–∞–∂–ª–∏–≤–æ –¥–ª—è –±–µ–∑–ø–µ—Ä–µ—Ä–≤–Ω–æ–≥–æ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
        video.addEventListener('loadedmetadata', function () {
            console.log(`üìä Video ${index + 1} metadata loaded, duration: ${video.duration}s`);
        });
    });

    // –ú–æ–±—ñ–ª—å–Ω–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è
    const isMobile = window.innerWidth <= 768 || 'ontouchstart' in window;
    if (isMobile) {
        // –ù–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö –ø–∞—É–∑–∏–º–æ –≤—ñ–¥–µ–æ –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó –±–∞—Ç–∞—Ä–µ—ó
        videoElements.forEach(video => {
            video.muted = true;
            video.pause();
            video.style.opacity = '0.7';
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ –ª–∏—à–µ –ø–µ—Ä—à–µ –≤—ñ–¥–µ–æ —è–∫ —Å—Ç–∞—Ç–∏—á–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        videoElements[0].classList.remove('hero-video--hidden');
        console.log('üì± Mobile detected - video rotation disabled for battery optimization');
    }

    // iOS Safari –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
    if (isIOS) {
        videoElements.forEach(video => {
            video.playsInline = true;
            video.muted = true;
            video.setAttribute('webkit-playsinline', 'true');
        });
        console.log('üçé iOS Safari optimizations applied');
    }

    console.log('üé¨ Video rotation initialized successfully');
}
